/**
* Multicolor Series v3.0.0 (2024-11-18)
*
* (c) 2012-2024 Black Label
*
* License: MIT
*/
(function(){
(function(l){"object"===typeof module&&module.exports?module.exports=l:l(Highcharts)})(function(l){l=l?l._modules:{};((p,q,x,y)=>{p.hasOwnProperty(q)||(p[q]=y.apply(null,x),"function"===typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:q,module:p[q]}})))})(l,"Extensions/MulticolorSeries.js",[l["Core/Series/SeriesRegistry.js"],l["Core/Utilities.js"],l["Core/Series/Series.js"],l["Series/Line/LineSeries.js"]],(p,q,x,y)=>{const {isArray:D,pick:E}=q,z=b=>{let c=
!1;for(let a=0;a<b.length;a++){if("string"===typeof b[a]&&"number"===typeof b[a+1]&&"number"===typeof b[a+2])c=!0;else{c=!1;break}a+=2}return c};class C extends y{constructor(){super();this.getSegment=(b,c)=>{const a=this.options,d=a.dashStyle,e="square"!==a.linecap;c={stroke:c,"stroke-width":a.lineWidth,fill:"none",zIndex:1};let g;d?c.dashstyle=d:e&&(c["stroke-linecap"]=c["stroke-linejoin"]="round");b[1]&&(c.stroke=b[1]);z(b[0])&&(g=this.chart.renderer.path(b[0]).attr(c).add(this.group));(null===
g||void 0===g?0:g.shadow)&&g.shadow(!!a.shadow);return g};this.segments=[];this.singlePoints=[];this.graphPaths=[];this.areaPaths=[];this.graphs=[]}getPath(b){let c=[];b&&b.forEach(a=>{D(a[0])&&(c=c.concat(a[0]))});return c}getSegmentPath(b){const c=[],a=this.options.step;b.forEach((d,e)=>{const g=Number(d.plotX);d=Number(d.plotY);c.push(e?"L":"M");if(a&&e){e=b[e-1];const f=Number(e.plotX);"right"===a?c.push(e.plotX,d,"L"):"center"===a?c.push((f+g)/2,e.plotY,"L",(f+g)/2,d,"L"):c.push(g,e.plotY,"L")}c.push(g,
d)});return c}formatTrackerPath(b){var c,a,d,e;const g=this.options,f=b.length,h=this.singlePoints,k=null!==(a=null===(c=this.chart.options.tooltip)||void 0===c?void 0:c.snap)&&void 0!==a?a:0;if(f&&!g.trackByArea)for(c=f+1;c--;)if("M"===(null===(d=b[c])||void 0===d?void 0:d.toString())&&(a=b[c+1],"number"===typeof a&&b.splice(c+1,0,a-k,b[c+2],"L")),c&&"M"===(null===(e=b[c])||void 0===e?void 0:e.toString())||c===f)a=b[c-2],"number"===typeof a&&b.splice(c,0,"L",a+k,b[c-1]);for(c=0;c<h.length;c++)d=
h[c],e=Number(d.plotX),b.push("M",e-k,d.plotY,"L",e+k,d.plotY);return b}drawTracker(){var b,c,a;const d=this,e=d.options,g=e.trackByArea;var f=g?d.areaPaths:this.getPath(d.graphPaths);const h=d.chart,k=h.pointer,m=h.renderer,v=null!==(c=null===(b=h.options.tooltip)||void 0===b?void 0:b.snap)&&void 0!==c?c:0;b=d.tracker;const r=(c=e.cursor)&&{cursor:c},t=()=>{if(h.hoverSeries!==d)d.onMouseOver()};f=this.formatTrackerPath(f);z(f)&&(b?b.attr({d:f}):(d.tracker=m.path(f).attr({"stroke-linejoin":"round",
visibility:d.visible?"visible":"hidden",stroke:"rgba(192,192,192,0.002)",fill:g?"rgba(192,192,192,0.002)":"none","stroke-width":null!==(a=e.lineWidth)&&void 0!==a?a:g?0:2*v,zIndex:2}).add(d.group),[d.tracker,d.markerGroup].forEach(u=>{if(u&&(u.addClass("highcharts-tracker").on("mouseover",t).on("mouseout",w=>{if(k)k.onTrackerMouseOut(w)}),r&&u.css(r),"undefined"!==typeof document.documentElement.ontouchstart))u.on("touchstart",t)})))}setState(b,c){var a,d,e,g;c=this.options;const f=this.graphs,h=
c.states;let k=null!==(a=c.lineWidth)&&void 0!==a?a:0;b=b||"";this.state!==b&&(this.state=b,!h||!b||!1!==(null===(d=h.hover)||void 0===d?void 0:d.enabled)&&!1!==(null===(e=h.inactive)||void 0===e?void 0:e.enabled))&&(h&&b&&(k=(null===(g=h[b])||void 0===g?void 0:g.lineWidth)||k+1),f&&f.forEach(m=>{m.dashstyle||m.attr({"stroke-width":k})}))}getSegments(){var b,c;const a=this.points;let d=[],e=0,g=a.length;if(g)if(this.options.connectNulls){for(let f=g-1;0<=f;--f)null===a[f].y&&a.splice(f,1);g=a.length;
a.forEach((f,h)=>{var k;0<h&&a[h].segmentColor!==a[h-1].segmentColor&&(d.push({points:a.slice(e,h+1),color:null!==(k=a[h-1].segmentColor)&&void 0!==k?k:""}),e=h)});g&&e!==g-1&&d.push({points:a.slice(e,g),color:null!==(b=a[g-1].segmentColor)&&void 0!==b?b:""});0<a.length&&0===d.length&&(d=[{color:null!==(c=a[0].segmentColor)&&void 0!==c?c:"",points:a}])}else{let f=null;a.forEach((h,k)=>{var m,v,r,t;const u=0<k&&(null===h.y||null===a[k-1].y||h.segmentColor!==a[k-1].segmentColor&&a[k].segmentColor!==
f),w=!(null===(m=a[k-1])||void 0===m||!m.segmentColor||null===a[k-1].y);let n=a.slice(e,k+1);u?0<n.length&&(n.forEach((A,B)=>{null===A.y&&n.splice(B,1)}),d.push({points:n,color:null!==(v=w?a[k-1].segmentColor:f)&&void 0!==v?v:""}),e=k):k===g-1&&(m=k+1,null===h.y&&m--,n=a.slice(e,m),0<n.length&&(n.forEach((A,B)=>{null===A.y&&n.splice(B,1)}),d.push({points:n,color:null!==(r=w?a[k-1].segmentColor:f)&&void 0!==r?r:""}),e=k));h&&(f=null!==(t=h.segmentColor)&&void 0!==t?t:"")})}this.segments=d}setSeriesGraphPathsAndSinglePoints(){const b=
this,c=[];let a=[],d;b.segments.forEach(e=>{d=b.getSegmentPath(e.points);1<e.points.length?c.push([d,e.color]):a=[...a,...e.points]});b.singlePoints=a;return b.graphPaths=c}drawGraph(){const b=this,c=b.options.lineColor||b.color||"";var a=b.setSeriesGraphPathsAndSinglePoints();const d=a.length;let e=0,g=b.graphs;g?a.forEach((f,h)=>{b.graphs[h]&&z(f[0])?b.graphs[h].attr({d:f[0],stroke:f[1]}):(f=this.getSegment(f,c))&&(b.graphs[h]=f)}):0<a.length&&(g=[],a.forEach((f,h)=>{(f=this.getSegment(f,c))&&(g[h]=
f)}),b.graphs=g);e=b.graphs&&b.graphs.length||-1;for(a=e;a>=d;a--)b.graphs&&b.graphs[a]&&(b.graphs[a].destroy(),b.graphs.splice(a,1))}translate(){super.translate.apply(this,arguments);this.getSegments&&this.getSegments()}}p.registerSeriesType("coloredline",C);class F extends C{constructor(){super();this.segments=[];this.singlePoints=[]}init(b,c){c.threshold=c.threshold||null;x.prototype.init.call(this,b,c)}closeSegment(b,c,a){b.push("L",c[c.length-1].plotX,a,"L",c[0].plotX,a)}drawGraph(){var b;super.drawGraph.call(this);
const c=this;c.graphs&&(null===(b=null===c||void 0===c?void 0:c.graphPaths)||void 0===b||b.forEach((a,d)=>{c.graphs[d]&&c.graphs[d].attr({fill:a[1]})}))}getSegmentPath(b){var c,a=super.getSegmentPath.call(this,b);const d=[...a],e=this.options,g=a.length,f=this.yAxis.getThreshold(null!==(c=e.threshold)&&void 0!==c?c:0);3===g&&d.push("L",a[1],a[2]);if(e.stacking)for(a=b.length-1;0<=a;a--)c=E(b[a].yBottom,f),a<b.length-1&&e.step&&d.push(b[a+1].plotX,c),d.push(b[a].plotX,c);else this.closeSegment(d,b,
f);return d}setSeriesGraphPathsAndSinglePoints(){const b=this,c=[];let a=[],d;this.areaPaths=[];b.segments.forEach(e=>{d=b.getSegmentPath(e.points);1<e.points.length?c.push([d,e.color]):a=[...a,...e.points]});b.singlePoints=a;return b.graphPaths=c}}p.registerSeriesType("coloredarea",F)})});
}).call(this)

//# sourceMappingURL=multicolor-series.min.js.map
